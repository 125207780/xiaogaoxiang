<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bonc.school.dao.mapper.SchoolIndexMapper">
	
	<select id="selectSchoolInfo" parameterType="java.util.Map"
				resultType="java.util.Map">
		select 
			UID,
			AREA_CITY_ID, 
			CNTY_ID, 
			SCH_ID, 
			SCH_NAME, 
			SCH_ADDR, 
			TYPE_NAME, 	
			SCH_PROPERTY, 	
			SCH_COMPETENT_ORG,
			SCH_USERS, 	
			NEW_SCH_USER, 
			CMCC_SCH_USERS, 		
			CMCC_PERCNT, 
			SUP_RANK, 
			OTH_SCH_USERS 	
		from BONC03.RPT_SCH_PORT_M where 
			STATIS_MONTH= #{statisMonth}
			and    UID= #{schoolId}
	</select>
	
	<select id="selectSchoolFilter" parameterType="java.util.Map"
				resultType="java.util.Map">
		select 
			UID,
			AREA_CITY_ID, 
			CNTY_ID, 
			SCH_ID, 
			SCH_NAME,
			CMCC_SCH_USERS , 
			cast(CMCC_SCH_USERS AS DOUBLE)/SCH_USERS  CMCC_SCH_USERS_p,  
			CMCC_SCH_KD_USERS , 
			case when  CMCC_SCH_USERS=0 then 0 else cast(CMCC_SCH_KD_USERS AS DOUBLE)/CMCC_SCH_USERS end CMCC_SCH_KD_USERS_p,  
			CMCC_SCH_UNLIM_USERS, 
			case when  CMCC_SCH_USERS=0 then 0 else cast(CMCC_SCH_UNLIM_USERs AS DOUBLE)/CMCC_SCH_USERS end  CMCC_SCH_UNLIM_USERs_p, 
			CMCC_SCH_UNLIMDIN_USERS, 
			case when  CMCC_SCH_USERS=0 then 0 else cast(CMCC_SCH_UNLIMDIN_USERS AS DOUBLE)/CMCC_SCH_USERS end  CMCC_SCH_UNLIMDIN_USERS_p, 
			CMCC_SCH_UNLIMFLUX_USERS, 
			case when  CMCC_SCH_USERS=0 then 0 else cast(CMCC_SCH_UNLIMFLUX_USERS AS DOUBLE)/CMCC_SCH_USERS END CMCC_SCH_UNLIMFLUX_USERS_p, 
			CMCC_SCH_ACTIV_USERS, 
			case when  CMCC_SCH_USERS=0 then 0 else cast(CMCC_SCH_ACTIV_USERS AS DOUBLE)/CMCC_SCH_USERS  end  CMCC_SCH_ACTIV_USERS_p , 
			CMCC_SCH_TERM_ACTIV_USERS,   
			case when  CMCC_SCH_USERS=0 then 0 else cast(CMCC_SCH_TERM_ACTIV_USERS AS DOUBLE)/CMCC_SCH_USERS  END CMCC_SCH_TERM_ACTIV_USERS_p,    	
			CMCC_SCH_FEE_ACTIV_USERS ,  
			case when  CMCC_SCH_USERS=0 then 0 else cast(CMCC_SCH_FEE_ACTIV_USERS AS DOUBLE)/CMCC_SCH_USERS end CMCC_SCH_FEE_ACTIV_USERS_p,   
			CMCC_SCH_SERV_ACTIV_USERS,   
			case when  CMCC_SCH_USERS=0 then 0 else cast(CMCC_SCH_SERV_ACTIV_USERS AS DOUBLE)/CMCC_SCH_USERS END CMCC_SCH_SERV_ACTIV_USERS_p,  	
			CMCC_SCH_OTH_ACTIV_USERS, 
			case when  CMCC_SCH_USERS=0 then 0 else cast(CMCC_SCH_OTH_ACTIV_USERS AS DOUBLE)/CMCC_SCH_USERS END CMCC_SCH_OTH_ACTIV_USERS_p,   	
			CMCC_SCH_4G_USERS, 
			case when  CMCC_SCH_USERS=0 then 0 else cast(CMCC_SCH_4G_USERS AS DOUBLE)/CMCC_SCH_USERS  end    CMCC_SCH_4G_USERS_p, 	
			CMCC_SCH_VNET_USERS, 
			case when  CMCC_SCH_USERS=0 then 0 else cast(CMCC_SCH_VNET_USERS AS DOUBLE)/CMCC_SCH_USERS  end CMCC_SCH_VNET_USERS_p 
		from BONC03.RPT_SCH_PORT_M where   
			STATIS_MONTH= #{statisMonth}
			and   UID= #{schoolId}
	</select>
	
	<select id="selectSchoolNewDevelop" parameterType="java.util.Map"
				resultType="java.util.Map">
		select 
			UID,
			AREA_CITY_ID, 
			CNTY_ID, 
			AREA_ID, 
			AREA_NAME, 
			SCH_ID, 
			SCH_NAME, 
			CMCC_SCH_DEV_USERS , 
			case when LM1_CMCC_SCH_DEV_USERS=0 then 0 else CAST((CMCC_SCH_DEV_USERS-LM1_CMCC_SCH_DEV_USERS) AS DOUBLE)/LM1_CMCC_SCH_DEV_USERS end CMCC_SCH_USERS_p,  
			CMCC_SCH_KD_DEV_USERS , 
			case when LM1_CMCC_SCH_KD_DEV_USERS=0 then 0 else CAST((CMCC_SCH_KD_DEV_USERS-LM1_CMCC_SCH_KD_DEV_USERS)AS DOUBLE)/LM1_CMCC_SCH_KD_DEV_USERS end CMCC_SCH_KD_USERS_p,  
			CMCC_SCH_UNLIM_DEV_USERS, 
			case when LM1_CMCC_SCH_UNLIM_DEV_USERS =0 then 0 else CAST((CMCC_SCH_UNLIM_DEV_USERS-LM1_CMCC_SCH_UNLIM_DEV_USERS) AS DOUBLE)/LM1_CMCC_SCH_UNLIM_DEV_USERS   end CMCC_SCH_UNLIM_USERs_p, 
			CMCC_SCH_UNLIMDIN_DEV_USERS, 
			case when LM1_CMCC_SCH_UNLIMDIN_DEV_USERS =0 then 0 ELSE CAST((CMCC_SCH_UNLIMDIN_DEV_USERS-LM1_CMCC_SCH_UNLIMDIN_DEV_USERS) AS DOUBLE)/LM1_CMCC_SCH_UNLIMDIN_DEV_USERS END CMCC_SCH_UNLIMDIN_DEV_USERS_p, 
			CMCC_SCH_UNLIMFLUX_DEV_USERS, 
			case when LM1_CMCC_SCH_UNLIMFLUX_DEV_USERS =0 then 0 ELSE CAST((CMCC_SCH_UNLIMFLUX_DEV_USERS-LM1_CMCC_SCH_UNLIMFLUX_DEV_USERS) AS DOUBLE)/LM1_CMCC_SCH_UNLIMFLUX_DEV_USERS END CMCC_SCH_UNLIMFLUX_DEV_USERS_p, 
			CMCC_SCH_ACTIV_DEV_USERS, 
			case when LM1_CMCC_SCH_ACTIV_DEV_USERS =0 then 0 else CAST((CMCC_SCH_ACTIV_DEV_USERS-LM1_CMCC_SCH_ACTIV_DEV_USERS) AS DOUBLE)/LM1_CMCC_SCH_ACTIV_DEV_USERS  end CMCC_SCH_ACTIV_USERS_p, 
			CMCC_SCH_TERM_ACTIV_DEV_USERS,  
			case when LM1_CMCC_SCH_TERM_ACTIV_DEV_USERS=0 then 0 ELSE  CAST((CMCC_SCH_TERM_ACTIV_DEV_USERS-LM1_CMCC_SCH_TERM_ACTIV_DEV_USERS) AS DOUBLE)/LM1_CMCC_SCH_TERM_ACTIV_DEV_USERS end CMCC_SCH_TERM_ACTIV_DEV_USERS_p,  
			CMCC_SCH_FEE_ACTIV_DEV_USERS , 
			case when LM1_CMCC_SCH_TERM_ACTIV_DEV_USERS=0 then 0 ELSE CAST((CMCC_SCH_FEE_ACTIV_DEV_USERS-LM1_CMCC_SCH_FEE_ACTIV_DEV_USERS) AS DOUBLE)/LM1_CMCC_SCH_FEE_ACTIV_DEV_USERS  END CMCC_SCH_FEE_ACTIV_DEV_USERS_p,  
			CMCC_SCH_SERV_ACTIV_DEV_USERS, 
			case when LM1_CMCC_SCH_TERM_ACTIV_DEV_USERS=0 then 0 else CAST((CMCC_SCH_SERV_ACTIV_DEV_USERS-LM1_CMCC_SCH_SERV_ACTIV_DEV_USERS)AS DOUBLE)/LM1_CMCC_SCH_SERV_ACTIV_DEV_USERS END CMCC_SCH_SERV_ACTIV_DEV_USERS_p,  	
			CMCC_SCH_OTH_ACTIV_DEV_USERS, 
			case when  LM1_CMCC_SCH_OTH_ACTIV_DEV_USERS=0 then 0 else cast((CMCC_SCH_OTH_ACTIV_DEV_USERS-LM1_CMCC_SCH_OTH_ACTIV_DEV_USERS) AS DOUBLE)/LM1_CMCC_SCH_OTH_ACTIV_DEV_USERS END CMCC_SCH_OTH_ACTIV_DEV_USERS_p, 
			CMCC_SCH_4G_DEV_USERS, 
			case when LM1_CMCC_SCH_4G_DEV_USERS=0 then 0 ELSE CAST((CMCC_SCH_4G_DEV_USERS-LM1_CMCC_SCH_4G_DEV_USERS) AS DOUBLE)/LM1_CMCC_SCH_4G_DEV_USERS  end   CMCC_SCH_4G_USERS_p, 
			CMCC_SCH_VNET_DEV_USERS, 
			case when LM1_CMCC_SCH_VNET_DEV_USERS=0 then 0 else CAST((CMCC_SCH_VNET_DEV_USERS-LM1_CMCC_SCH_VNET_DEV_USERS) AS DOUBLE)/LM1_CMCC_SCH_VNET_DEV_USERS  end  CMCC_SCH_VNET_USERS_p 
		from BONC03.RPT_SCH_PORT_M 
			where  
			STATIS_MONTH=  #{statisMonth}
			and    UID=#{schoolId}
	</select>
	
	<select id="selectSchoolUse" parameterType="java.util.Map"
				resultType="java.util.Map">
				select 
				UID,
				AREA_CITY_ID, 
				CNTY_ID, 
				AREA_ID, 
				 AREA_NAME, 
				SCH_NAME, 
				SCH_ID, 
				CMCC_SCH_ARPU, 
				CMCC_SCH_ARPU_REAL_FEE,
				CMCC_SCH_DOU, 
				CMCC_SCH_MOU, 
				CMCC_SCH_CALL_USERS, 
				case when LM1_CMCC_SCH_ARPU=0 then 0 else (CMCC_SCH_ARPU-LM1_CMCC_SCH_ARPU)/LM1_CMCC_SCH_ARPU end LM1_CMCC_SCH_ARPU_p, 
				case when LM1_CMCC_SCH_ARPU_REAL_FEE=0 then 0 else (CMCC_SCH_ARPU_REAL_FEE-LM1_CMCC_SCH_ARPU_REAL_FEE)/LM1_CMCC_SCH_ARPU_REAL_FEE end LM1_CMCC_SCH_ARPU_REAL_FEE_p,
				case when LM1_CMCC_SCH_DOU=0 then 0 else(CMCC_SCH_DOU-LM1_CMCC_SCH_DOU)/LM1_CMCC_SCH_DOU end LM1_CMCC_SCH_MOU_p, 
				case when LM1_CMCC_SCH_MOU=0 then 0 else(CMCC_SCH_MOU-LM1_CMCC_SCH_MOU)/LM1_CMCC_SCH_MOU end LM1_CMCC_SCH_DOU_p, 
				case when LM1_CMCC_SCH_CALL_USERS=0 then 0 else(CMCC_SCH_CALL_USERS-LM1_CMCC_SCH_CALL_USERS)/LM1_CMCC_SCH_CALL_USERS   end LM1_CMCC_SCH_CALL_USERS_p 
			from BONC03.RPT_SCH_PORT_M   
				where  
				STATIS_MONTH= #{statisMonth}
				and  UID= #{schoolId}
	</select>
	
	<select id="selectFilterRanking" parameterType="java.util.Map"
					resultType="java.util.Map">
		select * from (
		select  
		 t.UID,
		 t.AREA_CITY_ID, 
		 t.CNTY_ID, 
		 t.AREA_ID, 
		 t.AREA_NAME, 
		 t.SCH_ID, 
		 t.SCH_NAME, 
		 t.CMCC_SCH_USERS , 
		 t.CMCC_SCH_USERS_p,  
		 t.CMCC_SCH_KD_USERS , 
		 t.CMCC_SCH_KD_USERS_p,  
		 t.CMCC_SCH_UNLIM_USERS, 
		 t.CMCC_SCH_UNLIM_USERs_p,  
		 t.CMCC_SCH_ACTIV_USERS, 	
		 t.CMCC_SCH_ACTIV_USERS_p , 
		 t.CMCC_SCH_4G_USERS, 
		 t.CMCC_SCH_4G_USERS_p,  		
		 t.CMCC_SCH_VNET_USERS,
		 t.CMCC_SCH_VNET_USERS_p,  
		row_number()over(partition by AREA_ID order by CMCC_SCH_USERS_p desc) rank , 
		row_number()over(partition by AREA_ID order by CMCC_SCH_KD_USERS_p desc) rank1 , 
		row_number()over(partition by AREA_ID order by CMCC_SCH_UNLIM_USERs_p desc) rank2 , 
		row_number()over(partition by AREA_ID order by CMCC_SCH_ACTIV_USERS_p desc) rank3 , 
		row_number()over(partition by AREA_ID order by CMCC_SCH_4G_USERS_p desc) rank4 , 
		row_number()over(partition by AREA_ID order by CMCC_SCH_VNET_USERS_p desc) rank5 , 
		row_number()over(partition by substr(AREA_ID,1,1) order by CMCC_SCH_USERS_p desc) rank6 , 
		row_number()over(partition by substr(AREA_ID,1,1) order by CMCC_SCH_KD_USERS_p desc) rank7 , 
		row_number()over(partition by substr(AREA_ID,1,1) order by CMCC_SCH_UNLIM_USERs_p desc) rank8 , 
		row_number()over(partition by substr(AREA_ID,1,1) order by CMCC_SCH_ACTIV_USERS_p desc) rank9 , 
		row_number()over(partition by substr(AREA_ID,1,1) order by CMCC_SCH_4G_USERS_p desc) rank10 , 
		row_number()over(partition by substr(AREA_ID,1,1) order by CMCC_SCH_VNET_USERS_p desc) rank11  
		from(
		select 
		UID,
		AREA_CITY_ID, 
		CNTY_ID, 
		AREA_ID, 
		AREA_NAME, 
		SCH_ID, 
		SCH_NAME, 
		CMCC_SCH_USERS , 
		cast(CMCC_SCH_USERS AS DOUBLE)/SCH_USERS  CMCC_SCH_USERS_p,  
		CMCC_SCH_KD_USERS , 
		case when  CMCC_SCH_USERS=0 then 0 else cast(CMCC_SCH_KD_USERS AS DOUBLE)/CMCC_SCH_USERS end CMCC_SCH_KD_USERS_p, 
		CMCC_SCH_UNLIM_USERS, 
		case when  CMCC_SCH_USERS=0 then 0 else cast(CMCC_SCH_UNLIM_USERs AS DOUBLE)/CMCC_SCH_USERS end  CMCC_SCH_UNLIM_USERs_p, 
		CMCC_SCH_ACTIV_USERS, 
		case when  CMCC_SCH_USERS=0 then 0 else cast(CMCC_SCH_ACTIV_USERS AS DOUBLE)/CMCC_SCH_USERS  end  CMCC_SCH_ACTIV_USERS_p , 
		CMCC_SCH_4G_USERS, 
		case when  CMCC_SCH_USERS=0 then 0 else cast(CMCC_SCH_4G_USERS AS DOUBLE)/CMCC_SCH_USERS  end    CMCC_SCH_4G_USERS_p, 	
		CMCC_SCH_VNET_USERS, 
		case when  CMCC_SCH_USERS=0 then 0 else cast(CMCC_SCH_VNET_USERS AS DOUBLE)/CMCC_SCH_USERS  end CMCC_SCH_VNET_USERS_p   
		from BONC03.RPT_SCH_PORT_M  where   STATIS_MONTH=  #{statisMonth}
		 )t
		 )where    
		1=1
		
		<if test="level == 2">
		AND AREA_CITY_ID =(SELECT  area_city_id FROM  BONC03.RPT_SCH_PORT_M 
		WHERE  STATIS_MONTH=  #{statisMonth}
		AND  uid = #{uid})
		</if>
		
		<if test="level == 3">
		AND CNTY_ID =(SELECT  CNTY_ID FROM  BONC03.RPT_SCH_PORT_M 
		WHERE  STATIS_MONTH=  #{statisMonth}
		AND  uid = #{uid}) 
		</if>
		
		<if test="level == 4">
		AND uid = #{uid}
		</if>
		ORDER BY 	rank1
	</select>
	
	
	<select id="selectNewRanking" parameterType="java.util.Map"
					resultType="java.util.Map">
		select * from (
		select  
			t.UID,
			t.AREA_CITY_ID, 
			t.CNTY_ID, 
			t.AREA_ID, 
			t.AREA_NAME, 
			t.SCH_ID, 
			t.SCH_NAME, 
			t.CMCC_SCH_DEV_USERS , 
			t.CMCC_SCH_USERS_p,  
			t.CMCC_SCH_KD_DEV_USERS , 
			t.CMCC_SCH_KD_USERS_p,  
			t.CMCC_SCH_UNLIM_DEV_USERS, 
			t.CMCC_SCH_UNLIM_USERs_p,  
			t.CMCC_SCH_ACTIV_DEV_USERS, 
			t.CMCC_SCH_ACTIV_USERS_p, 
			t.CMCC_SCH_4G_DEV_USERS, 
			t.CMCC_SCH_4G_USERS_p, 	
			t.CMCC_SCH_VNET_DEV_USERS, 
			t.CMCC_SCH_VNET_USERS_p,  
			row_number()over(partition by AREA_ID order by CMCC_SCH_USERS_p desc) rank , 
			row_number()over(partition by AREA_ID order by CMCC_SCH_KD_USERS_p desc) rank1 , 
			row_number()over(partition by AREA_ID order by CMCC_SCH_UNLIM_USERs_p desc) rank2 , 
			row_number()over(partition by AREA_ID order by CMCC_SCH_ACTIV_USERS_p desc) rank3 , 
			row_number()over(partition by AREA_ID order by CMCC_SCH_4G_USERS_p desc) rank4 , 
			row_number()over(partition by AREA_ID order by CMCC_SCH_VNET_USERS_p desc) rank5 , 
			row_number()over(partition by  substr(AREA_ID,1,1) order by CMCC_SCH_USERS_p desc) rank6 , 
			row_number()over(partition by  substr(AREA_ID,1,1) order by CMCC_SCH_KD_USERS_p desc) rank7 , 
			row_number()over(partition by  substr(AREA_ID,1,1) order by CMCC_SCH_UNLIM_USERs_p desc) rank8 , 
			row_number()over(partition by  substr(AREA_ID,1,1) order by CMCC_SCH_ACTIV_USERS_p desc) rank9 , 
			row_number()over(partition by  substr(AREA_ID,1,1) order by CMCC_SCH_4G_USERS_p desc) rank10 , 
			row_number()over(partition by  substr(AREA_ID,1,1) order by CMCC_SCH_VNET_USERS_p desc) rank11  
			 from
			 (
			SELECT
			UID,
			AREA_CITY_ID, 
			CNTY_ID, 
			AREA_ID, 
			AREA_NAME, 
			SCH_ID, 
			SCH_NAME, 
			CMCC_SCH_DEV_USERS , 
			case when LM1_CMCC_SCH_DEV_USERS=0 then 0 else CAST((CMCC_SCH_DEV_USERS-LM1_CMCC_SCH_DEV_USERS) AS DOUBLE)/LM1_CMCC_SCH_DEV_USERS end CMCC_SCH_USERS_p, 
			CMCC_SCH_KD_DEV_USERS , 	
			case when LM1_CMCC_SCH_KD_DEV_USERS=0 then 0 else CAST((CMCC_SCH_KD_DEV_USERS-LM1_CMCC_SCH_KD_DEV_USERS)AS DOUBLE)/LM1_CMCC_SCH_KD_DEV_USERS end CMCC_SCH_KD_USERS_p, 
			CMCC_SCH_UNLIM_DEV_USERS, 
			case when LM1_CMCC_SCH_UNLIM_DEV_USERS =0 then 0 else CAST((CMCC_SCH_UNLIM_DEV_USERS-LM1_CMCC_SCH_UNLIM_DEV_USERS)AS DOUBLE)/LM1_CMCC_SCH_UNLIM_DEV_USERS   end CMCC_SCH_UNLIM_USERs_p, 
			CMCC_SCH_ACTIV_DEV_USERS, 
			case when LM1_CMCC_SCH_ACTIV_DEV_USERS =0 then 0 else CAST((CMCC_SCH_ACTIV_DEV_USERS-LM1_CMCC_SCH_ACTIV_DEV_USERS)AS DOUBLE)/LM1_CMCC_SCH_ACTIV_DEV_USERS  end CMCC_SCH_ACTIV_USERS_p, 
			CMCC_SCH_4G_DEV_USERS, 
			case when LM1_CMCC_SCH_4G_DEV_USERS=0 then 0 ELSE  CAST((CMCC_SCH_4G_DEV_USERS-LM1_CMCC_SCH_4G_DEV_USERS)AS DOUBLE)/LM1_CMCC_SCH_4G_DEV_USERS  end   CMCC_SCH_4G_USERS_p, 	
			CMCC_SCH_VNET_DEV_USERS, 
			case when LM1_CMCC_SCH_VNET_DEV_USERS=0 then 0 else  CAST((CMCC_SCH_VNET_DEV_USERS-LM1_CMCC_SCH_VNET_DEV_USERS)AS DOUBLE)/LM1_CMCC_SCH_VNET_DEV_USERS  end  CMCC_SCH_VNET_USERS_p  
			from BONC03.RPT_SCH_PORT_M 
			where  STATIS_MONTH= #{statisMonth}
			)t 
			 
			)WHERE 1=1
			
			<if test="level == 2">
				AND AREA_CITY_ID =(SELECT  area_city_id FROM  BONC03.RPT_SCH_PORT_M 
				WHERE  STATIS_MONTH=  #{statisMonth}
				AND  uid = #{uid})
				</if>
				
				<if test="level == 3">
				AND CNTY_ID =(SELECT  CNTY_ID FROM  BONC03.RPT_SCH_PORT_M 
				WHERE  STATIS_MONTH=  #{statisMonth}
				AND  uid = #{uid}) 
				</if>
				
				<if test="level == 4">
				AND uid = #{uid}
				</if>
				ORDER BY 	rank1
	</select>
	
	<select id="selectUseRanking" parameterType="java.util.Map"
					resultType="java.util.Map">
		select * from (
		select  
			t.UID,
			t.AREA_CITY_ID, 
			t.CNTY_ID, 
			t.AREA_ID, 
			t.AREA_NAME, 
			t.SCH_NAME, 
			t.SCH_ID, 
			t.CMCC_SCH_ARPU, 
			T.CMCC_SCH_ARPU_ZR, 
			t.CMCC_SCH_DOU, 
			t.CMCC_SCH_MOU, 
			t.CMCC_SCH_CALL_USERS, 
			t.CMCC_SCH_ARPU_p, 
			t.CMCC_SCH_DOU_p, 
			t.CMCC_SCH_MOU_p, 
			t.CMCC_SCH_CALL_USERS_p, 
			t.CMCC_SCH_ARPU_ZR_p,
			row_number()over(partition by AREA_ID order by CMCC_SCH_ARPU_p desc) rank , 
			row_number()over(partition by AREA_ID order by CMCC_SCH_DOU_p desc) rank1 , 
			row_number()over(partition by AREA_ID order by CMCC_SCH_MOU_p desc) rank2, 
			row_number()over(partition by AREA_ID order by CMCC_SCH_CALL_USERS desc) rank3 , 
			row_number()over(partition by AREA_ID order by CMCC_SCH_ARPU_ZR_p desc) rank8 ,  
			row_number()over(partition by substr(AREA_ID,1,1) order by CMCC_SCH_ARPU_p desc) rank4 , 
			row_number()over(partition by substr(AREA_ID,1,1) order by CMCC_SCH_DOU_p desc) rank5 , 
			row_number()over(partition by substr(AREA_ID,1,1) order by CMCC_SCH_MOU_p desc) rank6, 
			row_number()over(partition by substr(AREA_ID,1,1) order by CMCC_SCH_CALL_USERS_p desc) rank7  ,
			row_number()over(partition by substr(AREA_ID,1,1) order by CMCC_SCH_ARPU_ZR_p desc) rank9 
			from(
			select 
			UID,
			AREA_CITY_ID, 
			CNTY_ID, 
			AREA_ID, 
			 AREA_NAME, 
			SCH_NAME, 
			SCH_ID, 
			CMCC_SCH_ARPU, 
			CMCC_SCH_ARPU_ZR,  
			CMCC_SCH_DOU, 
			CMCC_SCH_MOU, 
			CMCC_SCH_CALL_USERS, 
			case when LM1_CMCC_SCH_ARPU=0 then 0 else CAST((CMCC_SCH_ARPU-LM1_CMCC_SCH_ARPU) AS DOUBLE)/LM1_CMCC_SCH_ARPU end  CMCC_SCH_ARPU_p, 
			case when LM1_CMCC_SCH_ARPU_ZR=0 then 0 else CAST((CMCC_SCH_ARPU_ZR-LM1_CMCC_SCH_ARPU_ZR) AS DOUBLE)/LM1_CMCC_SCH_ARPU_ZR end  CMCC_SCH_ARPU_ZR_p, 
			case when LM1_CMCC_SCH_DOU=0 then 0 ELSE CAST((CMCC_SCH_DOU-LM1_CMCC_SCH_DOU) AS DOUBLE)/LM1_CMCC_SCH_DOU end  CMCC_SCH_DOU_p, 
			case when LM1_CMCC_SCH_MOU=0 then 0 ELSE CAST((CMCC_SCH_MOU-LM1_CMCC_SCH_MOU) AS DOUBLE)/LM1_CMCC_SCH_MOU end  CMCC_SCH_MOU_p, 
			case when LM1_CMCC_SCH_CALL_USERS=0 then 0 ELSE CAST((CMCC_SCH_CALL_USERS-LM1_CMCC_SCH_CALL_USERS) AS DOUBLE)/LM1_CMCC_SCH_CALL_USERS   end  CMCC_SCH_CALL_USERS_p 
			from BONC03.RPT_SCH_PORT_M  where  STATIS_MONTH=#{statisMonth}
			)t
			) where 
			1=1
			
			<if test="level == 2">
				AND AREA_CITY_ID =(SELECT  area_city_id FROM  BONC03.RPT_SCH_PORT_M 
				WHERE  STATIS_MONTH=  #{statisMonth}
				AND  uid = #{uid})
				</if>
				
			<if test="level == 3">
			AND CNTY_ID =(SELECT  CNTY_ID FROM  BONC03.RPT_SCH_PORT_M 
			WHERE  STATIS_MONTH=  #{statisMonth}
			AND  uid = #{uid}) 
			</if>
			
			<if test="level == 4">
			AND uid = #{uid}
			</if>
			ORDER BY 	rank1
	</select>
	
	<select id="selectFilterEchart" parameterType="java.util.Map"
					resultType="java.util.Map">
		select 
			b.uid,
			b.AREA_ID AREA_city_ID, 
			b.CNTY_ID, 
			 
			a.SCH_NAME, 
			a.AREA_ID, 
			a.AREA_NAME, 
			case when a.TYPE_ID='00' then '校园用户'
			         when a.TYPE_ID='01' then '校园宽带'
			         when a.TYPE_ID='02' then '校园不限量类型'
			         when a.TYPE_ID='03' then '校园合约类型'
			         when a.TYPE_ID='04' then '校园4G类型'
			         when a.TYPE_ID='05' then '校园V网类型' end  TYPE_ID, 
			a.SERV_ID, 
			a.SERV_NAME, 
			a.CMCC_SCH_USERS 
			from BONC03.RPT_SCH_PORT_DISTR_M  a
			  JOIN BONC03.DIM_SCH_ID_INFO b
			ON a.SCH_ID=b.SCH_ID
			where a.statis_month= #{statisMonth}
			AND a.TYPE_ID = #{typeId}
			AND b.uid =#{uid}
	</select>
	
	<select id="selectNewEchart" parameterType="java.util.Map"
						resultType="java.util.Map">
		 select 
			b.uid,
			b.AREA_ID AREA_city_ID, 
			b.CNTY_ID, 
			a.SCH_ID, 
			a.SCH_NAME, 
			a.AREA_ID, 
			a.AREA_NAME, 
			case when a.TYPE_ID='00' then '校园用户'
			         when a.TYPE_ID='01' then '校园宽带'
			         when a.TYPE_ID='02' then '校园不限量类型'
			         when a.TYPE_ID='03' then '校园合约类型'
			         when a.TYPE_ID='04' then '校园4G类型'
			         when a.TYPE_ID='05' then '校园V网类型' end  TYPE_ID,
			a.DEV_DATE, 
			a.CMCC_SCH_USERS 
			from BONC03.RPT_SCH_PORT_DEV_DISTR_M A
			  JOIN BONC03.DIM_SCH_ID_INFO b
			ON a.SCH_ID=b.SCH_ID
			where a.statis_month= #{statisMonth}
			AND a.TYPE_ID = #{typeId}
			AND b.uid = #{uid}
			order  BY a.DEV_DATE
	</select>
	
	<select id="selectUseEchart" parameterType="java.util.Map"
						resultType="java.util.Map">
		SELECT
			b.uid,
			b.AREA_ID AREA_city_ID, 
			b.CNTY_ID, 
			a.SCH_ID, 
			a.SCH_NAME, 
			a.AREA_ID, 
			a.AREA_NAME, 
			case when a.TYPE_ID='01' then '校园用户ARPU'
			         when a.TYPE_ID='02' then '校园用户DOU'
			         when a.TYPE_ID='03' then '校园用户MOU'
			         when a.TYPE_ID='04' then '通话次数'
			          when a.TYPE_ID='05' then '校园用户ARPU(剔除折让后)'
			 end  TYPE_ID, 
			a.LVL_TYPE_ID, 
			a.LVL_TYPE,	 
			a.CMCC_SCH_USERS	 
			from BONC03.RPT_SCH_PORT_LVL_DISTR_M A
			  JOIN BONC03.DIM_SCH_ID_INFO b
			ON a.SCH_ID=b.SCH_ID
			where a.statis_month= #{statisMonth}
			AND a.TYPE_ID = #{typeId}
			AND b.uid = #{uid}
	</select>

</mapper>